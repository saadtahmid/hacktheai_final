import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useTheme, getThemeColors } from './ThemeProvider';
import { useTranslation } from './LanguageSwitcher';

interface DisasterInfo {
    id: string;
    name: string;
    emoji: string;
    description: string;
    statistics: {
        frequency: string;
        affected: string;
        damage: string;
    };
    howWeHelp: string[];
    recentExample?: string;
}

const NaturalDisasterInfo: React.FC = () => {
    const { isDark } = useTheme();
    const { language } = useTranslation();
    const colors = getThemeColors(isDark);
    const [selectedDisaster, setSelectedDisaster] = useState<string>('flood');

    // Disaster data with bilingual support
    const disasterData: { [key: string]: DisasterInfo[] } = {
        en: [
            {
                id: 'flood',
                name: 'Floods',
                emoji: 'ЁЯМК',
                description: 'Bangladesh faces annual flooding affecting millions. Our platform enables rapid response and efficient distribution of emergency supplies.',
                statistics: {
                    frequency: 'Annual - affects 20% of country',
                    affected: '18 million people annually',
                    damage: '$2.8 billion economic loss/year'
                },
                howWeHelp: [
                    'Real-time flood zone mapping and volunteer deployment',
                    'Emergency supply coordination (food, water, medicine)',
                    'Safe evacuation route planning with GPS tracking',
                    'Post-flood rehabilitation resource matching'
                ],
                recentExample: '2020 Monsoon: Coordinated aid for 2.5 million flood victims'
            },
            {
                id: 'cyclone',
                name: 'Cyclones',
                emoji: 'ЁЯМкя╕П',
                description: 'Powerful cyclones threaten coastal Bangladesh regularly. Our system coordinates pre-emptive evacuations and rapid recovery efforts.',
                statistics: {
                    frequency: '2-3 major cyclones per year',
                    affected: '5-10 million people per event',
                    damage: '$1.5 billion average per cyclone'
                },
                howWeHelp: [
                    'Pre-cyclone evacuation coordination and shelter management',
                    'Emergency medical supply distribution to remote areas',
                    'Post-cyclone damage assessment and relief prioritization',
                    'Temporary shelter setup and family reunification'
                ],
                recentExample: 'Cyclone Amphan 2020: Mobilized 500+ volunteers in 24 hours'
            },
            {
                id: 'drought',
                name: 'Droughts',
                emoji: 'ЁЯПЬя╕П',
                description: 'Extended dry periods affect agriculture and water supply. Our platform connects affected communities with water and food resources.',
                statistics: {
                    frequency: 'Every 2-3 years in northern regions',
                    affected: '3-5 million farmers annually',
                    damage: '30-50% crop loss during severe droughts'
                },
                howWeHelp: [
                    'Water tanker coordination and distribution scheduling',
                    'Drought-resistant seed distribution to farmers',
                    'Alternative livelihood support and job matching',
                    'Long-term water conservation project coordination'
                ],
                recentExample: '2019 Drought: Delivered water to 500+ villages in Rangpur'
            },
            {
                id: 'riverbank',
                name: 'River Erosion',
                emoji: 'ЁЯПЮя╕П',
                description: 'River bank erosion displaces thousands annually. Our system helps coordinate relocation and rehabilitation efforts.',
                statistics: {
                    frequency: 'Continuous - 12,000 hectares lost/year',
                    affected: '50,000 people displaced annually',
                    damage: '1 million people at risk nationwide'
                },
                howWeHelp: [
                    'Emergency relocation assistance and temporary housing',
                    'Land rehabilitation and new settlement coordination',
                    'Livelihood restoration and skill development programs',
                    'Community infrastructure rebuilding projects'
                ],
                recentExample: 'Padma Erosion 2021: Relocated 100+ families safely'
            },
            {
                id: 'heatwave',
                name: 'Heat Waves',
                emoji: 'ЁЯМбя╕П',
                description: 'Rising temperatures pose health risks, especially to vulnerable populations. Our network provides cooling centers and health support.',
                statistics: {
                    frequency: 'Increasing - 3-4 severe events/year',
                    affected: '15+ million in urban areas',
                    damage: '1000+ heat-related illnesses annually'
                },
                howWeHelp: [
                    'Cooling center location and capacity management',
                    'Heat-related medical emergency response coordination',
                    'Water distribution in high-risk urban areas',
                    'Public awareness campaigns and health monitoring'
                ],
                recentExample: '2023 Heat Wave: Set up 50+ cooling centers in Dhaka'
            }
        ],
        bn: [
            {
                id: 'flood',
                name: 'ржмржирзНржпрж╛',
                emoji: 'ЁЯМК',
                description: 'ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржкрзНрж░рждрж┐ржмржЫрж░ ржмржирзНржпрж╛рж░ ржорзБржЦрзЛржорзБржЦрж┐ рж╣ржпрж╝ ржпрж╛ рж▓рж╛ржЦрзЛ ржорж╛ржирзБрж╖ржХрзЗ ржкрзНрж░ржнрж╛ржмрж┐ржд ржХрж░рзЗред ржЖржорж╛ржжрзЗрж░ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо ржЬрж░рзБрж░рж┐ рж╕рж░ржмрж░рж╛рж╣рзЗрж░ ржжрзНрж░рзБржд ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржПржмржВ ржжржХрзНрж╖ ржмрж┐рждрж░ржг рж╕ржХрзНрж╖ржо ржХрж░рзЗред',
                statistics: {
                    frequency: 'ржмрж╛рж░рзНрж╖рж┐ржХ - ржжрзЗрж╢рзЗрж░ рзирзж% ржПрж▓рж╛ржХрж╛ ржкрзНрж░ржнрж╛ржмрж┐ржд',
                    affected: 'ржмрж╛рж░рзНрж╖рж┐ржХ рзз.рзо ржХрзЛржЯрж┐ ржорж╛ржирзБрж╖',
                    damage: 'ржмржЫрж░рзЗ рзи.рзо ржмрж┐рж▓рж┐ржпрж╝ржи ржбрж▓рж╛рж░ ржЕрж░рзНржержирзИрждрж┐ржХ ржХрзНрж╖рждрж┐'
                },
                howWeHelp: [
                    'рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо ржмржирзНржпрж╛ ржЕржЮрзНржЪрж▓ ржорзНржпрж╛ржкрж┐ржВ ржПржмржВ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржорзЛрждрж╛ржпрж╝рзЗржи',
                    'ржЬрж░рзБрж░рж┐ рж╕рж░ржмрж░рж╛рж╣ рж╕ржоржирзНржмржпрж╝ (ржЦрж╛ржжрзНржп, ржкрж╛ржирж┐, ржУрж╖рзБржз)',
                    'GPS ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ рж╕рж╣ ржирж┐рж░рж╛ржкржж рж╕рж░рж┐ржпрж╝рзЗ ржирзЗржУржпрж╝рж╛рж░ рж░рзБржЯ ржкрж░рж┐ржХрж▓рзНржкржирж╛',
                    'ржмржирзНржпрж╛-ржкрж░ржмрж░рзНрждрзА ржкрзБржирж░рзНржмрж╛рж╕ржи рж╕ржорзНржкржж ржорзНржпрж╛ржЪрж┐ржВ'
                ],
                recentExample: 'рзирзжрзирзж ржмрж░рзНрж╖рж╛: рзирзл рж▓рж╛ржЦ ржмржирзНржпрж╛ ржжрзБрж░рзНржЧрждрзЗрж░ ржЬржирзНржп рж╕рж╛рж╣рж╛ржпрзНржп рж╕ржоржирзНржмржпрж╝'
            },
            {
                id: 'cyclone',
                name: 'ржШрзВрж░рзНржгрж┐ржЭржбрж╝',
                emoji: 'ЁЯМкя╕П',
                description: 'рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА ржШрзВрж░рзНржгрж┐ржЭржбрж╝ ржирж┐ржпрж╝ржорж┐ржд ржЙржкржХрзВрж▓рзАржпрж╝ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ржХрзЗ рж╣рзБржоржХрж┐ ржжрзЗржпрж╝ред ржЖржорж╛ржжрзЗрж░ рж╕рж┐рж╕рзНржЯрзЗржо ржкрзВрж░рзНржм-рж╕рждрж░рзНржХ рж╕рж░рж┐ржпрж╝рзЗ ржирзЗржУржпрж╝рж╛ ржПржмржВ ржжрзНрж░рзБржд ржкрзБржирж░рзБржжрзНржзрж╛рж░рзЗрж░ ржкрзНрж░ржЪрзЗрж╖рзНржЯрж╛ рж╕ржоржирзНржмржпрж╝ ржХрж░рзЗред',
                statistics: {
                    frequency: 'ржмржЫрж░рзЗ рзи-рзйржЯрж┐ ржмржбрж╝ ржШрзВрж░рзНржгрж┐ржЭржбрж╝',
                    affected: 'ржкрзНрж░рждрж┐ ржШржЯржирж╛ржпрж╝ рзл-рззрзж ржорж┐рж▓рж┐ржпрж╝ржи ржорж╛ржирзБрж╖',
                    damage: 'ржкрзНрж░рждрж┐ ржШрзВрж░рзНржгрж┐ржЭржбрж╝рзЗ ржЧржбрж╝рзЗ рзз.рзл ржмрж┐рж▓рж┐ржпрж╝ржи ржбрж▓рж╛рж░'
                },
                howWeHelp: [
                    'ржШрзВрж░рзНржгрж┐ржЭржбрж╝-ржкрзВрж░рзНржм рж╕рж░рж┐ржпрж╝рзЗ ржирзЗржУржпрж╝рж╛ рж╕ржоржирзНржмржпрж╝ ржПржмржВ ржЖрж╢рзНрж░ржпрж╝ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛',
                    'ржжрзВрж░ржмрж░рзНрждрзА ржПрж▓рж╛ржХрж╛ржпрж╝ ржЬрж░рзБрж░рж┐ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рж░ржмрж░рж╛рж╣ ржмрж┐рждрж░ржг',
                    'ржШрзВрж░рзНржгрж┐ржЭржбрж╝-ржкрж░ржмрж░рзНрждрзА ржХрзНрж╖ржпрж╝ржХрзНрж╖рждрж┐ ржорзВрж▓рзНржпрж╛ржпрж╝ржи ржПржмржВ рждрзНрж░рж╛ржг ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░',
                    'ржЕрж╕рзНржерж╛ржпрж╝рзА ржЖрж╢рзНрж░ржпрж╝ рж╕рзНржерж╛ржкржирж╛ ржПржмржВ ржкрж╛рж░рж┐ржмрж╛рж░рж┐ржХ ржкрзБржирж░рзНржорж┐рж▓ржи'
                ],
                recentExample: 'ржШрзВрж░рзНржгрж┐ржЭржбрж╝ ржЖржорзНржлрж╛ржи рзирзжрзирзж: рзирзк ржШржирзНржЯрж╛ржпрж╝ рзлрзжрзж+ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ рж╕ржВржЧржарж┐ржд'
            },
            {
                id: 'drought',
                name: 'ржЦрж░рж╛',
                emoji: 'ЁЯПЬя╕П',
                description: 'ржжрзАрж░рзНржШ рж╢рзБрж╖рзНржХ рж╕ржоржпрж╝ржХрж╛рж▓ ржХрзГрж╖рж┐ ржПржмржВ ржЬрж▓ рж╕рж░ржмрж░рж╛рж╣ржХрзЗ ржкрзНрж░ржнрж╛ржмрж┐ржд ржХрж░рзЗред ржЖржорж╛ржжрзЗрж░ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо ржХрзНрж╖рждрж┐ржЧрзНрж░рж╕рзНржд рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝ржЧрзБрж▓рж┐ржХрзЗ ржЬрж▓ ржПржмржВ ржЦрж╛ржжрзНржп рж╕ржорзНржкржжрзЗрж░ рж╕рж╛ржерзЗ рж╕ржВржпрзБржХрзНржд ржХрж░рзЗред',
                statistics: {
                    frequency: 'ржЙрждрзНрждрж░рж╛ржЮрзНржЪрж▓рзЗ ржкрзНрж░рждрж┐ рзи-рзй ржмржЫрж░рзЗ',
                    affected: 'ржмрж╛рж░рзНрж╖рж┐ржХ рзй-рзл ржорж┐рж▓рж┐ржпрж╝ржи ржХрзГрж╖ржХ',
                    damage: 'ржЧрзБрж░рзБрждрж░ ржЦрж░рж╛ржпрж╝ рзйрзж-рзлрзж% ржлрж╕рж▓рзЗрж░ ржХрзНрж╖рждрж┐'
                },
                howWeHelp: [
                    'ржкрж╛ржирж┐ ржЯрзНржпрж╛ржВржХрж╛рж░ рж╕ржоржирзНржмржпрж╝ ржПржмржВ ржмрж┐рждрж░ржг рж╕ржоржпрж╝рж╕рзВржЪрзА',
                    'ржХрзГрж╖ржХржжрзЗрж░ ржХрж╛ржЫрзЗ ржЦрж░рж╛-ржкрзНрж░рждрж┐рж░рзЛржзрзА ржмрзАржЬ ржмрж┐рждрж░ржг',
                    'ржмрж┐ржХрж▓рзНржк ржЬрзАржмрж┐ржХрж╛ рж╕рж╣рж╛ржпрж╝рждрж╛ ржПржмржВ ржЪрж╛ржХрж░рж┐ ржорзНржпрж╛ржЪрж┐ржВ',
                    'ржжрзАрж░рзНржШржорзЗржпрж╝рж╛ржжрзА ржЬрж▓ рж╕ржВрж░ржХрзНрж╖ржг ржкрзНрж░ржХрж▓рзНржк рж╕ржоржирзНржмржпрж╝'
                ],
                recentExample: 'рзирзжрззрзп ржЦрж░рж╛: рж░ржВржкрзБрж░рзЗ рзлрзжрзж+ ржЧрзНрж░рж╛ржорзЗ ржкрж╛ржирж┐ рж╕рж░ржмрж░рж╛рж╣'
            },
            {
                id: 'riverbank',
                name: 'ржиржжрзАржнрж╛ржЩржи',
                emoji: 'ЁЯПЮя╕П',
                description: 'ржиржжрзА рждрзАрж░рзЗрж░ ржнрж╛ржЩржи ржмрж╛рж░рзНрж╖рж┐ржХ рж╣рж╛ржЬрж╛рж░ рж╣рж╛ржЬрж╛рж░ ржорж╛ржирзБрж╖ржХрзЗ ржмрж╛рж╕рзНрждрзБржЪрзНржпрзБржд ржХрж░рзЗред ржЖржорж╛ржжрзЗрж░ рж╕рж┐рж╕рзНржЯрзЗржо рж╕рзНржерж╛ржирж╛ржирзНрждрж░ ржПржмржВ ржкрзБржирж░рзНржмрж╛рж╕ржирзЗрж░ ржкрзНрж░ржЪрзЗрж╖рзНржЯрж╛ рж╕ржоржирзНржмржпрж╝ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред',
                statistics: {
                    frequency: 'ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХ - ржмржЫрж░рзЗ рззрзи,рзжрзжрзж рж╣рзЗржХрзНржЯрж░ рж╣рж╛рж░рж╛ржпрж╝',
                    affected: 'ржмрж╛рж░рзНрж╖рж┐ржХ рзлрзж,рзжрзжрзж ржорж╛ржирзБрж╖ ржмрж╛рж╕рзНрждрзБржЪрзНржпрзБржд',
                    damage: 'ржжрзЗрж╢ржмрзНржпрж╛ржкрзА рззрзж рж▓рж╛ржЦ ржорж╛ржирзБрж╖ ржЭрзБржБржХрж┐рждрзЗ'
                },
                howWeHelp: [
                    'ржЬрж░рзБрж░рж┐ рж╕рзНржерж╛ржирж╛ржирзНрждрж░ рж╕рж╣рж╛ржпрж╝рждрж╛ ржПржмржВ ржЕрж╕рзНржерж╛ржпрж╝рзА ржЖржмрж╛рж╕ржи',
                    'ржнрзВржорж┐ ржкрзБржирж░рзНржмрж╛рж╕ржи ржПржмржВ ржирждрзБржи ржмрж╕рждрж┐ рж╕ржоржирзНржмржпрж╝',
                    'ржЬрзАржмрж┐ржХрж╛ ржкрзБржирж░рзБржжрзНржзрж╛рж░ ржПржмржВ ржжржХрзНрж╖рждрж╛ ржЙржирзНржиржпрж╝ржи ржХрж░рзНржорж╕рзВржЪрж┐',
                    'рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗрж░ ржЕржмржХрж╛ржарж╛ржорзЛ ржкрзБржирж░рзНржирж┐рж░рзНржорж╛ржг ржкрзНрж░ржХрж▓рзНржк'
                ],
                recentExample: 'ржкржжрзНржорж╛ ржнрж╛ржЩржи рзирзжрзирзз: рззрзжрзж+ ржкрж░рж┐ржмрж╛рж░ ржирж┐рж░рж╛ржкржжрзЗ рж╕рзНржерж╛ржирж╛ржирзНрждрж░'
            },
            {
                id: 'heatwave',
                name: 'рждрж╛ржкржкрзНрж░ржмрж╛рж╣',
                emoji: 'ЁЯМбя╕П',
                description: 'ржХрзНрж░ржоржмрж░рзНржзржорж╛ржи рждрж╛ржкржорж╛рждрзНрж░рж╛ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЭрзБржБржХрж┐ рж╕рзГрж╖рзНржЯрж┐ ржХрж░рзЗ, ржмрж┐рж╢рзЗрж╖ ржХрж░рзЗ ржжрзБрж░рзНржмрж▓ ржЬржиржЧрзЛрж╖рзНржарзАрж░ ржЬржирзНржпред ржЖржорж╛ржжрзЗрж░ ржирзЗржЯржУржпрж╝рж╛рж░рзНржХ рж╢рзАрждрж▓ ржХрзЗржирзНржжрзНрж░ ржПржмржВ рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕рж╣рж╛ржпрж╝рждрж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗред',
                statistics: {
                    frequency: 'ржмрзГржжрзНржзрж┐ - ржмржЫрж░рзЗ рзй-рзкржЯрж┐ ржЧрзБрж░рзБрждрж░ ржШржЯржирж╛',
                    affected: 'рж╢рж╣рзБрж░рзЗ ржПрж▓рж╛ржХрж╛ржпрж╝ рззрзл+ ржорж┐рж▓рж┐ржпрж╝ржи',
                    damage: 'ржмрж╛рж░рзНрж╖рж┐ржХ рззрзжрзжрзж+ рждрж╛ржк-рж╕ржорзНржкрж░рзНржХрж┐ржд ржЕрж╕рзБрж╕рзНржерждрж╛'
                },
                howWeHelp: [
                    'рж╢рзАрждрж▓ ржХрзЗржирзНржжрзНрж░рзЗрж░ ржЕржмрж╕рзНржерж╛ржи ржПржмржВ ржХрзНрж╖ржорждрж╛ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛',
                    'рждрж╛ржк-рж╕ржорзНржкрж░рзНржХрж┐ржд ржЪрж┐ржХрж┐рзОрж╕рж╛ ржЬрж░рзБрж░рж┐ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ рж╕ржоржирзНржмржпрж╝',
                    'ржЙржЪрзНржЪ ржЭрзБржБржХрж┐ржкрзВрж░рзНржг рж╢рж╣рзБрж░рзЗ ржПрж▓рж╛ржХрж╛ржпрж╝ ржкрж╛ржирж┐ ржмрж┐рждрж░ржг',
                    'ржЬржирж╕ржЪрзЗрждржирждрж╛ ржкрзНрж░ржЪрж╛рж░ ржПржмржВ рж╕рзНржмрж╛рж╕рзНржерзНржп ржкрж░рзНржпржмрзЗржХрзНрж╖ржг'
                ],
                recentExample: 'рзирзжрзирзй рждрж╛ржкржкрзНрж░ржмрж╛рж╣: ржврж╛ржХрж╛ржпрж╝ рзлрзж+ рж╢рзАрждрж▓ ржХрзЗржирзНржжрзНрж░ рж╕рзНржерж╛ржкржи'
            }
        ]
    };

    const currentDisasters = disasterData[language] || disasterData.en;
    const selectedDisasterData = currentDisasters.find(d => d.id === selectedDisaster) || currentDisasters[0];

    const containerVariants = {
        hidden: { opacity: 0, y: 50 },
        visible: {
            opacity: 1,
            y: 0,
            transition: {
                duration: 0.6,
                staggerChildren: 0.1
            }
        }
    };

    const itemVariants = {
        hidden: { opacity: 0, x: -20 },
        visible: {
            opacity: 1,
            x: 0,
            transition: { duration: 0.5 }
        }
    };

    const cardVariants = {
        hidden: { opacity: 0, scale: 0.9 },
        visible: {
            opacity: 1,
            scale: 1,
            transition: { duration: 0.4 }
        },
        hover: {
            scale: 1.03,
            y: -5,
            transition: { duration: 0.2 }
        }
    };

    return (
        <motion.section
            className="py-20"
            style={{
                padding: '5rem 0',
                background: colors.bg.gradient
            }}
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
        >
            <div
                className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
                style={{ maxWidth: '80rem', margin: '0 auto', padding: '0 1rem' }}
            >
                {/* Header */}
                <motion.div
                    className="text-center mb-16"
                    style={{ textAlign: 'center', marginBottom: '4rem' }}
                    variants={containerVariants}
                >
                    <motion.h2
                        className="text-4xl font-black mb-4 bangla-text"
                        style={{
                            fontSize: '2.5rem',
                            fontWeight: '900',
                            color: colors.text.primary,
                            marginBottom: '1rem',
                            lineHeight: '1.2'
                        }}
                        variants={itemVariants}
                    >
                        {language === 'bn' ? 'ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржжрзБрж░рзНржпрзЛржЧ ржУ ржЖржорж╛ржжрзЗрж░ рж╕ржорж╛ржзрж╛ржи' : 'Natural Disasters & Our Solutions'}
                    </motion.h2>
                    <motion.p
                        className="text-xl max-w-4xl mx-auto bangla-text leading-relaxed"
                        style={{
                            fontSize: '1.25rem',
                            color: colors.text.secondary,
                            maxWidth: '56rem',
                            margin: '0 auto',
                            lineHeight: '1.6'
                        }}
                        variants={itemVariants}
                    >
                        {language === 'bn'
                            ? 'ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗ ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржжрзБрж░рзНржпрзЛржЧрзЗрж░ ржорзБржЦрзЗ ржХрзАржнрж╛ржмрзЗ ржЖржорж╛ржжрзЗрж░ AI-ржЪрж╛рж▓рж┐ржд ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо ржжрзНрж░рзБржд, ржХрж╛рж░рзНржпржХрж░ рждрзНрж░рж╛ржг рж╕рж╣рж╛ржпрж╝рждрж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзЗ'
                            : 'How our AI-powered platform ensures rapid, effective disaster relief across Bangladesh\'s diverse natural challenges'
                        }
                    </motion.p>
                </motion.div>

                {/* Disaster Type Selector */}
                <motion.div
                    className="flex flex-wrap justify-center gap-3 mb-12"
                    style={{
                        display: 'flex',
                        flexWrap: 'wrap',
                        justifyContent: 'center',
                        gap: '0.75rem',
                        marginBottom: '3rem'
                    }}
                    variants={containerVariants}
                >
                    {currentDisasters.map((disaster) => (
                        <motion.button
                            key={disaster.id}
                            onClick={() => setSelectedDisaster(disaster.id)}
                            className="flex items-center gap-2 px-4 py-3 rounded-xl font-semibold transition-all duration-300 shadow-md hover:shadow-lg"
                            style={{
                                display: 'flex',
                                alignItems: 'center',
                                gap: '0.5rem',
                                padding: '0.75rem 1rem',
                                borderRadius: '0.75rem',
                                fontWeight: '600',
                                transition: 'all 0.3s ease',
                                boxShadow: colors.shadow,
                                backgroundColor: selectedDisaster === disaster.id ? colors.green.primary : colors.bg.primary,
                                color: selectedDisaster === disaster.id ? 'white' : colors.text.primary,
                                border: `2px solid ${selectedDisaster === disaster.id ? colors.green.primary : colors.border.primary}`,
                                cursor: 'pointer'
                            }}
                            variants={itemVariants}
                            whileHover={{ scale: 1.05 }}
                            whileTap={{ scale: 0.95 }}
                        >
                            <span style={{ fontSize: '1.25rem' }}>{disaster.emoji}</span>
                            <span className="bangla-text">{disaster.name}</span>
                        </motion.button>
                    ))}
                </motion.div>

                {/* Main Content */}
                <AnimatePresence mode="wait">
                    <motion.div
                        key={selectedDisaster}
                        className="grid lg:grid-cols-2 gap-12 items-start"
                        style={{
                            display: 'grid',
                            gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',
                            gap: '3rem',
                            alignItems: 'start'
                        }}
                        variants={containerVariants}
                        initial="hidden"
                        animate="visible"
                        exit="hidden"
                    >
                        {/* Left Column - Disaster Info */}
                        <motion.div
                            className="bg-white rounded-2xl shadow-xl p-8 border-2"
                            style={{
                                backgroundColor: colors.bg.primary,
                                borderRadius: '1rem',
                                boxShadow: colors.shadow,
                                padding: '2rem',
                                border: `2px solid ${colors.border.primary}`
                            }}
                            variants={cardVariants}
                            whileHover="hover"
                        >
                            <div className="flex items-center gap-4 mb-6">
                                <div
                                    className="w-16 h-16 rounded-full flex items-center justify-center text-3xl"
                                    style={{
                                        width: '4rem',
                                        height: '4rem',
                                        backgroundColor: colors.green.bg,
                                        borderRadius: '50%',
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center',
                                        fontSize: '2rem'
                                    }}
                                >
                                    {selectedDisasterData.emoji}
                                </div>
                                <div>
                                    <h3
                                        className="text-2xl font-bold bangla-text"
                                        style={{
                                            fontSize: '1.5rem',
                                            fontWeight: '700',
                                            color: colors.text.primary
                                        }}
                                    >
                                        {selectedDisasterData.name}
                                    </h3>
                                    <p
                                        className="text-sm font-medium"
                                        style={{
                                            fontSize: '0.875rem',
                                            fontWeight: '500',
                                            color: colors.green.primary
                                        }}
                                    >
                                        {language === 'bn' ? 'ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржжрзБрж░рзНржпрзЛржЧ' : 'Natural Disaster'}
                                    </p>
                                </div>
                            </div>

                            <p
                                className="text-lg leading-relaxed mb-8 bangla-text"
                                style={{
                                    fontSize: '1rem',
                                    color: colors.text.secondary,
                                    marginBottom: '2rem',
                                    lineHeight: '1.6'
                                }}
                            >
                                {selectedDisasterData.description}
                            </p>

                            {/* Statistics */}
                            <div className="space-y-4 mb-8">
                                <h4
                                    className="text-lg font-bold bangla-text"
                                    style={{
                                        fontSize: '1.125rem',
                                        fontWeight: '700',
                                        color: colors.text.primary,
                                        marginBottom: '1rem'
                                    }}
                                >
                                    {language === 'bn' ? 'ЁЯУК ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи' : 'ЁЯУК Key Statistics'}
                                </h4>
                                {Object.entries(selectedDisasterData.statistics).map(([key, value]) => (
                                    <div
                                        key={key}
                                        className="flex justify-between items-center py-2 border-b"
                                        style={{
                                            display: 'flex',
                                            justifyContent: 'space-between',
                                            alignItems: 'center',
                                            padding: '0.5rem 0',
                                            borderBottom: `1px solid ${colors.border.primary}`
                                        }}
                                    >
                                        <span
                                            className="font-medium bangla-text"
                                            style={{
                                                fontWeight: '500',
                                                color: colors.text.secondary
                                            }}
                                        >
                                            {key === 'frequency' ? (language === 'bn' ? 'ржШржЯржирж╛рж░ рж╣рж╛рж░' : 'Frequency') :
                                                key === 'affected' ? (language === 'bn' ? 'ржХрзНрж╖рждрж┐ржЧрзНрж░рж╕рзНржд' : 'Affected') :
                                                    language === 'bn' ? 'ржХрзНрж╖ржпрж╝ржХрзНрж╖рждрж┐' : 'Damage'}:
                                        </span>
                                        <span
                                            className="font-bold text-sm"
                                            style={{
                                                fontWeight: '700',
                                                fontSize: '0.875rem',
                                                color: colors.green.primary
                                            }}
                                        >
                                            {value}
                                        </span>
                                    </div>
                                ))}
                            </div>

                            {/* Recent Example */}
                            {selectedDisasterData.recentExample && (
                                <div
                                    className="bg-green-50 rounded-lg p-4 border-l-4 border-green-500"
                                    style={{
                                        backgroundColor: colors.green.bg,
                                        borderRadius: '0.5rem',
                                        padding: '1rem',
                                        borderLeft: `4px solid ${colors.green.primary}`
                                    }}
                                >
                                    <p
                                        className="text-sm font-medium bangla-text"
                                        style={{
                                            fontSize: '0.875rem',
                                            fontWeight: '500',
                                            color: colors.text.primary
                                        }}
                                    >
                                        <strong>{language === 'bn' ? 'ЁЯПЖ рж╕рж╛ржорзНржкрзНрж░рждрж┐ржХ рж╕рж╛ржлрж▓рзНржп:' : 'ЁЯПЖ Recent Success:'}</strong> {selectedDisasterData.recentExample}
                                    </p>
                                </div>
                            )}
                        </motion.div>

                        {/* Right Column - How We Help */}
                        <motion.div
                            className="bg-white rounded-2xl shadow-xl p-8 border-2"
                            style={{
                                backgroundColor: colors.bg.tertiary,
                                borderRadius: '1rem',
                                boxShadow: colors.shadow,
                                padding: '2rem',
                                border: `2px solid ${colors.green.border}`
                            }}
                            variants={cardVariants}
                            whileHover="hover"
                        >
                            <h4
                                className="text-2xl font-bold mb-6 bangla-text flex items-center gap-3"
                                style={{
                                    fontSize: '1.5rem',
                                    fontWeight: '700',
                                    color: colors.text.primary,
                                    marginBottom: '1.5rem',
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '0.75rem'
                                }}
                            >
                                <span
                                    className="w-8 h-8 rounded-full flex items-center justify-center text-white text-sm"
                                    style={{
                                        width: '2rem',
                                        height: '2rem',
                                        backgroundColor: colors.green.primary,
                                        borderRadius: '50%',
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center',
                                        color: 'white',
                                        fontSize: '0.875rem'
                                    }}
                                >
                                    AI
                                </span>
                                {language === 'bn' ? 'ржЖржорж░рж╛ ржХрзАржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рж┐' : 'How Jonoshongjog Helps'}
                            </h4>

                            <div className="space-y-4">
                                {selectedDisasterData.howWeHelp.map((helpItem, index) => (
                                    <motion.div
                                        key={index}
                                        className="flex items-start gap-4 p-4 rounded-lg hover:bg-green-50 transition-colors duration-300"
                                        style={{
                                            display: 'flex',
                                            alignItems: 'flex-start',
                                            gap: '1rem',
                                            padding: '1rem',
                                            borderRadius: '0.5rem',
                                            transition: 'background-color 0.3s ease',
                                            backgroundColor: 'transparent'
                                        }}
                                        variants={itemVariants}
                                        whileHover={{
                                            backgroundColor: colors.green.bg,
                                            scale: 1.02
                                        }}
                                    >
                                        <div
                                            className="w-8 h-8 rounded-full flex items-center justify-center text-white font-bold flex-shrink-0"
                                            style={{
                                                width: '2rem',
                                                height: '2rem',
                                                backgroundColor: colors.green.primary,
                                                borderRadius: '50%',
                                                display: 'flex',
                                                alignItems: 'center',
                                                justifyContent: 'center',
                                                color: 'white',
                                                fontWeight: '700',
                                                fontSize: '0.875rem',
                                                flexShrink: 0
                                            }}
                                        >
                                            {index + 1}
                                        </div>
                                        <p
                                            className="text-sm leading-relaxed bangla-text"
                                            style={{
                                                fontSize: '0.875rem',
                                                color: colors.text.primary,
                                                lineHeight: '1.5'
                                            }}
                                        >
                                            {helpItem}
                                        </p>
                                    </motion.div>
                                ))}
                            </div>

                            {/* Call to Action */}
                            <motion.div
                                className="mt-8 p-6 bg-gradient-to-r from-green-500 to-green-600 rounded-xl text-white text-center"
                                style={{
                                    marginTop: '2rem',
                                    padding: '1.5rem',
                                    background: `linear-gradient(to right, ${colors.green.primary}, #059669)`,
                                    borderRadius: '0.75rem',
                                    color: 'white',
                                    textAlign: 'center'
                                }}
                                whileHover={{ scale: 1.02 }}
                            >
                                <p
                                    className="text-lg font-bold mb-3 bangla-text"
                                    style={{
                                        fontSize: '1.125rem',
                                        fontWeight: '700',
                                        marginBottom: '0.75rem'
                                    }}
                                >
                                    {language === 'bn'
                                        ? 'ЁЯЪи ржЬрж░рзБрж░рж┐ рж╕ржоржпрж╝рзЗ ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржерж╛ржХрзБржи'
                                        : 'ЁЯЪи Be Prepared - Join Our Network'
                                    }
                                </p>
                                <p
                                    className="text-sm bangla-text"
                                    style={{ fontSize: '0.875rem' }}
                                >
                                    {language === 'bn'
                                        ? 'ржжрзБрж░рзНржпрзЛржЧрзЗрж░ ржЖржЧрзЗ ржкрзНрж░рж╕рзНрждрзБржд ржерж╛ржХрзБржиред ржЖржорж╛ржжрзЗрж░ ржирзЗржЯржУржпрж╝рж╛рж░рзНржХрзЗ ржпрзЛржЧ ржжрж┐ржпрж╝рзЗ ржХржорж┐ржЙржирж┐ржЯрж┐ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзБржиред'
                                        : 'Join thousands of volunteers, donors, and organizations in our disaster preparedness network.'
                                    }
                                </p>
                            </motion.div>
                        </motion.div>
                    </motion.div>
                </AnimatePresence>

                {/* Impact Summary */}
                <motion.div
                    className="mt-16 bg-white rounded-2xl shadow-xl p-8 text-center"
                    style={{
                        marginTop: '4rem',
                        backgroundColor: colors.bg.primary,
                        borderRadius: '1rem',
                        boxShadow: colors.shadow,
                        padding: '2rem',
                        textAlign: 'center',
                        border: `2px solid ${colors.border.accent}`
                    }}
                    variants={cardVariants}
                    whileInView="visible"
                    whileHover="hover"
                >
                    <h3
                        className="text-2xl font-bold mb-6 bangla-text"
                        style={{
                            fontSize: '1.5rem',
                            fontWeight: '700',
                            color: colors.text.primary,
                            marginBottom: '1.5rem'
                        }}
                    >
                        {language === 'bn' ? 'ЁЯМЯ рж╕ржорзНржорж┐рж▓рж┐ржд ржкрзНрж░ржнрж╛ржм' : 'ЁЯМЯ Collective Impact'}
                    </h3>
                    <div
                        className="grid md:grid-cols-4 gap-6"
                        style={{
                            display: 'grid',
                            gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
                            gap: '1.5rem'
                        }}
                    >
                        {[
                            {
                                number: '5M+',
                                label: language === 'bn' ? 'ржЬрзАржмржи рж╕рзБрж░ржХрзНрж╖рж┐ржд' : 'Lives Protected',
                                emoji: 'ЁЯЫбя╕П'
                            },
                            {
                                number: '72 hrs',
                                label: language === 'bn' ? 'ржЧржбрж╝ рж╕рж╛ржбрж╝рж╛ рж╕ржоржпрж╝' : 'Avg Response Time',
                                emoji: 'тЪб'
                            },
                            {
                                number: '95%',
                                label: language === 'bn' ? 'рждрзНрж░рж╛ржг ржирж┐рж░рзНржнрзБрж▓рждрж╛' : 'Relief Accuracy',
                                emoji: 'ЁЯОп'
                            },
                            {
                                number: '24/7',
                                label: language === 'bn' ? 'AI рж╕рж╣рж╛ржпрж╝рждрж╛' : 'AI Assistance',
                                emoji: 'ЁЯдЦ'
                            }
                        ].map((stat, index) => (
                            <motion.div
                                key={index}
                                variants={itemVariants}
                                whileHover={{ scale: 1.1 }}
                            >
                                <div
                                    style={{
                                        fontSize: '2rem',
                                        marginBottom: '0.5rem'
                                    }}
                                >
                                    {stat.emoji}
                                </div>
                                <div
                                    className="text-2xl font-black mb-1"
                                    style={{
                                        fontSize: '1.5rem',
                                        fontWeight: '900',
                                        color: colors.green.primary,
                                        marginBottom: '0.25rem'
                                    }}
                                >
                                    {stat.number}
                                </div>
                                <div
                                    className="text-sm font-medium bangla-text"
                                    style={{
                                        fontSize: '0.875rem',
                                        fontWeight: '500',
                                        color: colors.text.secondary
                                    }}
                                >
                                    {stat.label}
                                </div>
                            </motion.div>
                        ))}
                    </div>
                </motion.div>
            </div>
        </motion.section>
    );
};

export default NaturalDisasterInfo;